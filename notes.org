#+title: Notes
#+author: Caleb

* ECS
ECS stands for "Entity Component Architecture". This is an architecture for handling the data in a game.
** Entity
An entity is basically any "object" in the game. A player, a monster, and an item are all examples of entities. Entities are NOT objects in the OOP sense, because entities do not encapsulate behavior. An entity is basically just an identification number. Entities are composed of components. The entity, in sum, is simply an ID attached to a list of components defining that ID. We could almost say that the components are properties, and the ID defines the haecceity of an entity. The components /describe/ the entity.
** Component
A component is a /property/ of an entity. The sum of an entity's components just is that entity; this is composition over inheritance, thus contradicting OOP. For example, an item, such as armor, would have /be/ and entity, but that entity would /have/ components, such as the fact that it is an item. A player would be an entity as well, but would lack the item component. It would, instead, have a player component, denoting the fact that it is a player. An enemy, likewise, would be an entity. The player, the item, and the entity would all have /position/ components, saying where they are on the map. Like entities, /components do not encapsulate behavior/. A component can be empty, and empty components are sometimes called "tags". They are there to signify that a given property exists.
** System
A system is a set of behaviors that acts according to the components of a set of entities. So a /rendering system/ might draw the map, find every entity with a /render/ component, and render all those entities. A /combat system/ might iterate over all the entities with a certain component. Generally speaking, systems cannot see the insides of systems; they are agnostic about one another.
*** Queries
Systems, generally speaking, require queries. A query is a set of properties. That set of properties is matched against every component in the world, and only those components matching EVERY property are returned to the results. Queries are composed out of components and then run.
** Resource
A resource is shared data available to multiple systems. The map is a resource. The camera is also a resource. The RNG, again, is a resource.
